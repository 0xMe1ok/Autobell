// ACTION - –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
void action() {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ö–õ–ò–ö–û–í (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π –≤–≤–æ–¥–∞)
  int bellCount;
  int datesCount;

  if (ui.click()) {
    if (ui.click("BTN_SaveConfig")) {
      configFile.update();
      ESP.restart();
    }
    else if (ui.click("BTN_SaveSettings")) {
      bellModesFile.update();
      settingsFile.update();
      bellDatesFile.update();
      ESP.restart();
    }
    else if (ui.click("BTN_SaveBellTime")) {
      bellTimeFile.update();
      ESP.restart();
    }
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∑–≤–æ–Ω–∫–∞ –≤ –±—É–¥–Ω–∏–π –¥–µ–Ω—å
    else if (ui.click("BTN_Add_WeekdayBell")) {
      bellCount = bellTimeFile["Weekday_BellCount"];
      bellTimeFile["Weekday_BellCount"] = bellCount + 1;
      bellTimeFile["Weekday_" + String(bellCount + 1)] = GPtime();
    }
    else if (ui.click("BTN_Del_WeekdayBell")) {
      bellCount = bellTimeFile["Weekday_BellCount"];
      if (bellCount > 1) {
        bellTimeFile.remove("Weekday_" + String(bellCount));
        bellTimeFile["Weekday_BellCount"] = bellCount - 1;
      }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∑–≤–æ–Ω–∫–∞ –≤ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π –¥–µ–Ω—å
    else if (ui.click("BTN_Add_ShortBell")) {
      bellCount = bellTimeFile["Short_BellCount"];
      bellTimeFile["Short_BellCount"] = bellCount + 1;
      bellTimeFile["Short_" + String(bellCount + 1)] = GPtime();
    }
    else if (ui.click("BTN_Del_ShortBell")) {
      bellCount = bellTimeFile["Short_BellCount"];
      if (bellCount > 1) {
        bellTimeFile.remove("Short_" + String(bellCount));
        bellTimeFile["Short_BellCount"] = bellCount - 1;
      }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∑–≤–æ–Ω–∫–∞ –≤ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –¥–µ–Ω—å
    else if (ui.click("BTN_Add_HolidayBell")) {
      bellCount = bellTimeFile["Holiday_BellCount"];
      bellTimeFile["Holiday_BellCount"] = bellCount + 1;
      bellTimeFile["Holiday_" + String(bellCount + 1)] = GPtime();
    }
    else if (ui.click("BTN_Del_HolidayBell")) {
      bellCount = bellTimeFile["Holiday_BellCount"];
      if (bellCount > 1) {
        bellTimeFile.remove("Holiday_" + String(bellCount));
        bellTimeFile["Holiday_BellCount"] = bellCount - 1;
      }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –î–∞—Ç—ã:–†–µ–∂–∏–º–∞
    else if (ui.click("BTN_Add_Date")) {
      datesCount = bellDatesFile["DatesCount"];
      bellDatesFile["DatesCount"] = datesCount + 1;

      DateMode dm;
      dm.date = "01.01";
      dm.mode = 1;
      bellDatesFile["Date_" + String(datesCount + 1)] = dm;
    }
    else if (ui.click("BTN_Del_Date")) {
      datesCount = bellDatesFile["DatesCount"];
      if (datesCount > 0) {
        bellDatesFile.remove("Date_" + String(datesCount + 1));
        bellDatesFile["DatesCount"] = datesCount - 1;
      }
    }

    // –í–∫–ª—é—á–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–∞
    else if (ui.click("BTN_EnableBell")) {
      enableBellForDuration();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ RTC-–º–æ–¥—É–ª—è
    else if (ui.click("BTN_RTC_Update")) {
      scheduledRTCUpdate();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∑–≤–æ–Ω–∫–∞
    else if (ui.clickInt("slt_bellmode", bellmode)) {
      nextBellTime = getNextBellTime();
      timeUntilBell = getTimeUntilBell();
    }
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–∞ Config
    if (ui.clickSub("CFG")) {
      if (ui.clickNameSub(1) == "STR") {
        configFile[ui.clickNameSub(2)] = ui.getString();
      }
      if (ui.clickNameSub(1) == "INT") {
        configFile[ui.clickNameSub(2)] = ui.getInt();
      }
    }
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–∞ bellModes
    else if (ui.clickSub("MOD")) {
      if (ui.clickNameSub(1) == "INT") {
        bellModesFile[ui.clickNameSub(2)] = ui.getInt();
      }
    }
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–∞ bellTime
    else if (ui.clickSub("TIM")) {
      if (ui.clickNameSub(1) == "TIM") {
        bellTimeFile[ui.clickNameSub(2)] = ui.getTime();
      }
    }
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–∞ bellDates
    else if (ui.clickSub("DAT")) {
      if (ui.clickNameSub(1) == "DAT") {
        GPdate selectedDate = ui.getDate();
        DateMode dm;

        bellDatesFile[ui.clickNameSub(2)].writeTo(dm);
        dm.date = selectedDate.encodeDMY().substring(0,5);

        bellDatesFile[ui.clickNameSub(2)] = dm;
      }
      if (ui.clickNameSub(1) == "INT") {
        int selectedMode = ui.getInt();
        DateMode dm;

        bellDatesFile[ui.clickNameSub(2)].writeTo(dm);
        dm.mode = selectedMode;

        bellDatesFile[ui.clickNameSub(2)] = dm;
      }
    }
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–∞ Settings
    else if (ui.clickSub("SET")) {
      if (ui.clickNameSub(1) == "INT") {
        bellModesFile[ui.clickNameSub(2)] = ui.getInt();
      }
    }
  }
  if (ui.update()) {
    String dsDateTime = ds.toString();
    String dayOfWeek = getDayOfWeek();
    String nextBell = isNotMoreBelling() ? "–ë–æ–ª—å—à–µ –∑–≤–æ–Ω–∫–æ–≤ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –±—É–¥–µ—Ç!" : daySecondsToHMS(nextBellTime);
    String untilBell = daySecondsToHMS(timeUntilBell);
    String bellStatus = isRinging ? "–ó–≤–æ–Ω–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω üîî" : "–ó–≤–æ–Ω–æ–∫ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω üîï";
    ui.updateString("LBL_RTC_DateTime", dsDateTime);
    ui.updateString("LBL_RTC_DayOfWeek", dayOfWeek);
    ui.updateString("LBL_NextBellTime", nextBell);
    ui.updateString("LBL_TimeUntilBell", untilBell);
    ui.updateString("LBL_BellStatus", bellStatus);
  }
}